{"ast":null,"code":"import RouteRecognizer from 'route-recognizer';\nimport FakeXMLHttpRequest from 'fake-xml-http-request';\nvar support = {\n  searchParams: 'URLSearchParams' in self,\n  iterable: 'Symbol' in self && 'iterator' in Symbol,\n  blob: 'FileReader' in self && 'Blob' in self && function () {\n    try {\n      new Blob();\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }(),\n  formData: 'FormData' in self,\n  arrayBuffer: 'ArrayBuffer' in self\n};\nfunction isDataView(obj) {\n  return obj && DataView.prototype.isPrototypeOf(obj);\n}\nif (support.arrayBuffer) {\n  var viewClasses = ['[object Int8Array]', '[object Uint8Array]', '[object Uint8ClampedArray]', '[object Int16Array]', '[object Uint16Array]', '[object Int32Array]', '[object Uint32Array]', '[object Float32Array]', '[object Float64Array]'];\n  var isArrayBufferView = ArrayBuffer.isView || function (obj) {\n    return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1;\n  };\n}\nfunction normalizeName(name) {\n  if (typeof name !== 'string') {\n    name = String(name);\n  }\n  if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n    throw new TypeError('Invalid character in header field name');\n  }\n  return name.toLowerCase();\n}\nfunction normalizeValue(value) {\n  if (typeof value !== 'string') {\n    value = String(value);\n  }\n  return value;\n}\n\n// Build a destructive iterator for the value list\nfunction iteratorFor(items) {\n  var iterator = {\n    next: function () {\n      var value = items.shift();\n      return {\n        done: value === undefined,\n        value: value\n      };\n    }\n  };\n  if (support.iterable) {\n    iterator[Symbol.iterator] = function () {\n      return iterator;\n    };\n  }\n  return iterator;\n}\nfunction Headers(headers) {\n  this.map = {};\n  if (headers instanceof Headers) {\n    headers.forEach(function (value, name) {\n      this.append(name, value);\n    }, this);\n  } else if (Array.isArray(headers)) {\n    headers.forEach(function (header) {\n      this.append(header[0], header[1]);\n    }, this);\n  } else if (headers) {\n    Object.getOwnPropertyNames(headers).forEach(function (name) {\n      this.append(name, headers[name]);\n    }, this);\n  }\n}\nHeaders.prototype.append = function (name, value) {\n  name = normalizeName(name);\n  value = normalizeValue(value);\n  var oldValue = this.map[name];\n  this.map[name] = oldValue ? oldValue + ', ' + value : value;\n};\nHeaders.prototype['delete'] = function (name) {\n  delete this.map[normalizeName(name)];\n};\nHeaders.prototype.get = function (name) {\n  name = normalizeName(name);\n  return this.has(name) ? this.map[name] : null;\n};\nHeaders.prototype.has = function (name) {\n  return this.map.hasOwnProperty(normalizeName(name));\n};\nHeaders.prototype.set = function (name, value) {\n  this.map[normalizeName(name)] = normalizeValue(value);\n};\nHeaders.prototype.forEach = function (callback, thisArg) {\n  for (var name in this.map) {\n    if (this.map.hasOwnProperty(name)) {\n      callback.call(thisArg, this.map[name], name, this);\n    }\n  }\n};\nHeaders.prototype.keys = function () {\n  var items = [];\n  this.forEach(function (value, name) {\n    items.push(name);\n  });\n  return iteratorFor(items);\n};\nHeaders.prototype.values = function () {\n  var items = [];\n  this.forEach(function (value) {\n    items.push(value);\n  });\n  return iteratorFor(items);\n};\nHeaders.prototype.entries = function () {\n  var items = [];\n  this.forEach(function (value, name) {\n    items.push([name, value]);\n  });\n  return iteratorFor(items);\n};\nif (support.iterable) {\n  Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n}\nfunction consumed(body) {\n  if (body.bodyUsed) {\n    return Promise.reject(new TypeError('Already read'));\n  }\n  body.bodyUsed = true;\n}\nfunction fileReaderReady(reader) {\n  return new Promise(function (resolve, reject) {\n    reader.onload = function () {\n      resolve(reader.result);\n    };\n    reader.onerror = function () {\n      reject(reader.error);\n    };\n  });\n}\nfunction readBlobAsArrayBuffer(blob) {\n  var reader = new FileReader();\n  var promise = fileReaderReady(reader);\n  reader.readAsArrayBuffer(blob);\n  return promise;\n}\nfunction readBlobAsText(blob) {\n  var reader = new FileReader();\n  var promise = fileReaderReady(reader);\n  reader.readAsText(blob);\n  return promise;\n}\nfunction readArrayBufferAsText(buf) {\n  var view = new Uint8Array(buf);\n  var chars = new Array(view.length);\n  for (var i = 0; i < view.length; i++) {\n    chars[i] = String.fromCharCode(view[i]);\n  }\n  return chars.join('');\n}\nfunction bufferClone(buf) {\n  if (buf.slice) {\n    return buf.slice(0);\n  } else {\n    var view = new Uint8Array(buf.byteLength);\n    view.set(new Uint8Array(buf));\n    return view.buffer;\n  }\n}\nfunction Body() {\n  this.bodyUsed = false;\n  this._initBody = function (body) {\n    this._bodyInit = body;\n    if (!body) {\n      this._bodyText = '';\n    } else if (typeof body === 'string') {\n      this._bodyText = body;\n    } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n      this._bodyBlob = body;\n    } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n      this._bodyFormData = body;\n    } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n      this._bodyText = body.toString();\n    } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n      this._bodyArrayBuffer = bufferClone(body.buffer);\n      // IE 10-11 can't handle a DataView body.\n      this._bodyInit = new Blob([this._bodyArrayBuffer]);\n    } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n      this._bodyArrayBuffer = bufferClone(body);\n    } else {\n      this._bodyText = body = Object.prototype.toString.call(body);\n    }\n    if (!this.headers.get('content-type')) {\n      if (typeof body === 'string') {\n        this.headers.set('content-type', 'text/plain;charset=UTF-8');\n      } else if (this._bodyBlob && this._bodyBlob.type) {\n        this.headers.set('content-type', this._bodyBlob.type);\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n      }\n    }\n  };\n  if (support.blob) {\n    this.blob = function () {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected;\n      }\n      if (this._bodyBlob) {\n        return Promise.resolve(this._bodyBlob);\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(new Blob([this._bodyArrayBuffer]));\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as blob');\n      } else {\n        return Promise.resolve(new Blob([this._bodyText]));\n      }\n    };\n    this.arrayBuffer = function () {\n      if (this._bodyArrayBuffer) {\n        return consumed(this) || Promise.resolve(this._bodyArrayBuffer);\n      } else {\n        return this.blob().then(readBlobAsArrayBuffer);\n      }\n    };\n  }\n  this.text = function () {\n    var rejected = consumed(this);\n    if (rejected) {\n      return rejected;\n    }\n    if (this._bodyBlob) {\n      return readBlobAsText(this._bodyBlob);\n    } else if (this._bodyArrayBuffer) {\n      return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer));\n    } else if (this._bodyFormData) {\n      throw new Error('could not read FormData body as text');\n    } else {\n      return Promise.resolve(this._bodyText);\n    }\n  };\n  if (support.formData) {\n    this.formData = function () {\n      return this.text().then(decode);\n    };\n  }\n  this.json = function () {\n    return this.text().then(JSON.parse);\n  };\n  return this;\n}\n\n// HTTP methods whose capitalization should be normalized\nvar methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\nfunction normalizeMethod(method) {\n  var upcased = method.toUpperCase();\n  return methods.indexOf(upcased) > -1 ? upcased : method;\n}\nfunction Request(input, options) {\n  options = options || {};\n  var body = options.body;\n  if (input instanceof Request) {\n    if (input.bodyUsed) {\n      throw new TypeError('Already read');\n    }\n    this.url = input.url;\n    this.credentials = input.credentials;\n    if (!options.headers) {\n      this.headers = new Headers(input.headers);\n    }\n    this.method = input.method;\n    this.mode = input.mode;\n    this.signal = input.signal;\n    if (!body && input._bodyInit != null) {\n      body = input._bodyInit;\n      input.bodyUsed = true;\n    }\n  } else {\n    this.url = String(input);\n  }\n  this.credentials = options.credentials || this.credentials || 'same-origin';\n  if (options.headers || !this.headers) {\n    this.headers = new Headers(options.headers);\n  }\n  this.method = normalizeMethod(options.method || this.method || 'GET');\n  this.mode = options.mode || this.mode || null;\n  this.signal = options.signal || this.signal;\n  this.referrer = null;\n  if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n    throw new TypeError('Body not allowed for GET or HEAD requests');\n  }\n  this._initBody(body);\n}\nRequest.prototype.clone = function () {\n  return new Request(this, {\n    body: this._bodyInit\n  });\n};\nfunction decode(body) {\n  var form = new FormData();\n  body.trim().split('&').forEach(function (bytes) {\n    if (bytes) {\n      var split = bytes.split('=');\n      var name = split.shift().replace(/\\+/g, ' ');\n      var value = split.join('=').replace(/\\+/g, ' ');\n      form.append(decodeURIComponent(name), decodeURIComponent(value));\n    }\n  });\n  return form;\n}\nfunction parseHeaders(rawHeaders) {\n  var headers = new Headers();\n  // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n  // https://tools.ietf.org/html/rfc7230#section-3.2\n  var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n  preProcessedHeaders.split(/\\r?\\n/).forEach(function (line) {\n    var parts = line.split(':');\n    var key = parts.shift().trim();\n    if (key) {\n      var value = parts.join(':').trim();\n      headers.append(key, value);\n    }\n  });\n  return headers;\n}\nBody.call(Request.prototype);\nfunction Response(bodyInit, options) {\n  if (!options) {\n    options = {};\n  }\n  this.type = 'default';\n  this.status = options.status === undefined ? 200 : options.status;\n  this.ok = this.status >= 200 && this.status < 300;\n  this.statusText = 'statusText' in options ? options.statusText : 'OK';\n  this.headers = new Headers(options.headers);\n  this.url = options.url || '';\n  this._initBody(bodyInit);\n}\nBody.call(Response.prototype);\nResponse.prototype.clone = function () {\n  return new Response(this._bodyInit, {\n    status: this.status,\n    statusText: this.statusText,\n    headers: new Headers(this.headers),\n    url: this.url\n  });\n};\nResponse.error = function () {\n  var response = new Response(null, {\n    status: 0,\n    statusText: ''\n  });\n  response.type = 'error';\n  return response;\n};\nvar redirectStatuses = [301, 302, 303, 307, 308];\nResponse.redirect = function (url, status) {\n  if (redirectStatuses.indexOf(status) === -1) {\n    throw new RangeError('Invalid status code');\n  }\n  return new Response(null, {\n    status: status,\n    headers: {\n      location: url\n    }\n  });\n};\nvar DOMException = self.DOMException;\ntry {\n  new DOMException();\n} catch (err) {\n  DOMException = function (message, name) {\n    this.message = message;\n    this.name = name;\n    var error = Error(message);\n    this.stack = error.stack;\n  };\n  DOMException.prototype = Object.create(Error.prototype);\n  DOMException.prototype.constructor = DOMException;\n}\nfunction fetch(input, init) {\n  return new Promise(function (resolve, reject) {\n    var request = new Request(input, init);\n    if (request.signal && request.signal.aborted) {\n      return reject(new DOMException('Aborted', 'AbortError'));\n    }\n    var xhr = new XMLHttpRequest();\n    function abortXhr() {\n      xhr.abort();\n    }\n    xhr.onload = function () {\n      var options = {\n        status: xhr.status,\n        statusText: xhr.statusText,\n        headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n      };\n      options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n      var body = 'response' in xhr ? xhr.response : xhr.responseText;\n      resolve(new Response(body, options));\n    };\n    xhr.onerror = function () {\n      reject(new TypeError('Network request failed'));\n    };\n    xhr.ontimeout = function () {\n      reject(new TypeError('Network request failed'));\n    };\n    xhr.onabort = function () {\n      reject(new DOMException('Aborted', 'AbortError'));\n    };\n    xhr.open(request.method, request.url, true);\n    if (request.credentials === 'include') {\n      xhr.withCredentials = true;\n    } else if (request.credentials === 'omit') {\n      xhr.withCredentials = false;\n    }\n    if ('responseType' in xhr && support.blob) {\n      xhr.responseType = 'blob';\n    }\n    request.headers.forEach(function (value, name) {\n      xhr.setRequestHeader(name, value);\n    });\n    if (request.signal) {\n      request.signal.addEventListener('abort', abortXhr);\n      xhr.onreadystatechange = function () {\n        // DONE (success or failure)\n        if (xhr.readyState === 4) {\n          request.signal.removeEventListener('abort', abortXhr);\n        }\n      };\n    }\n    xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n  });\n}\nfetch.polyfill = true;\nif (!self.fetch) {\n  self.fetch = fetch;\n  self.Headers = Headers;\n  self.Request = Request;\n  self.Response = Response;\n}\nvar FakeFetch = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  Headers: Headers,\n  Request: Request,\n  Response: Response,\n  get DOMException() {\n    return DOMException;\n  },\n  fetch: fetch\n});\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n/**\n * Check if we're required to add a port number.\n *\n * @see https://url.spec.whatwg.org/#default-port\n * @param {Number|String} port Port number we need to check\n * @param {String} protocol Protocol we need to check against.\n * @returns {Boolean} Is it a default port for the given protocol\n * @api private\n */\nvar requiresPort = function required(port, protocol) {\n  protocol = protocol.split(':')[0];\n  port = +port;\n  if (!port) return false;\n  switch (protocol) {\n    case 'http':\n    case 'ws':\n      return port !== 80;\n    case 'https':\n    case 'wss':\n      return port !== 443;\n    case 'ftp':\n      return port !== 21;\n    case 'gopher':\n      return port !== 70;\n    case 'file':\n      return false;\n  }\n  return port !== 0;\n};\nvar has = Object.prototype.hasOwnProperty,\n  undef;\n\n/**\n * Decode a URI encoded string.\n *\n * @param {String} input The URI encoded string.\n * @returns {String|Null} The decoded string.\n * @api private\n */\nfunction decode$1(input) {\n  try {\n    return decodeURIComponent(input.replace(/\\+/g, ' '));\n  } catch (e) {\n    return null;\n  }\n}\n\n/**\n * Simple query string parser.\n *\n * @param {String} query The query string that needs to be parsed.\n * @returns {Object}\n * @api public\n */\nfunction querystring(query) {\n  var parser = /([^=?&]+)=?([^&]*)/g,\n    result = {},\n    part;\n  while (part = parser.exec(query)) {\n    var key = decode$1(part[1]),\n      value = decode$1(part[2]);\n\n    //\n    // Prevent overriding of existing properties. This ensures that build-in\n    // methods like `toString` or __proto__ are not overriden by malicious\n    // querystrings.\n    //\n    // In the case if failed decoding, we want to omit the key/value pairs\n    // from the result.\n    //\n    if (key === null || value === null || key in result) continue;\n    result[key] = value;\n  }\n  return result;\n}\n\n/**\n * Transform a query string to an object.\n *\n * @param {Object} obj Object that should be transformed.\n * @param {String} prefix Optional prefix.\n * @returns {String}\n * @api public\n */\nfunction querystringify(obj, prefix) {\n  prefix = prefix || '';\n  var pairs = [],\n    value,\n    key;\n\n  //\n  // Optionally prefix with a '?' if needed\n  //\n  if ('string' !== typeof prefix) prefix = '?';\n  for (key in obj) {\n    if (has.call(obj, key)) {\n      value = obj[key];\n\n      //\n      // Edge cases where we actually want to encode the value to an empty\n      // string instead of the stringified value.\n      //\n      if (!value && (value === null || value === undef || isNaN(value))) {\n        value = '';\n      }\n      key = encodeURIComponent(key);\n      value = encodeURIComponent(value);\n\n      //\n      // If we failed to encode the strings, we should bail out as we don't\n      // want to add invalid strings to the query.\n      //\n      if (key === null || value === null) continue;\n      pairs.push(key + '=' + value);\n    }\n  }\n  return pairs.length ? prefix + pairs.join('&') : '';\n}\n\n//\n// Expose the module.\n//\nvar stringify = querystringify;\nvar parse = querystring;\nvar querystringify_1 = {\n  stringify: stringify,\n  parse: parse\n};\nvar slashes = /^[A-Za-z][A-Za-z0-9+-.]*:\\/\\//,\n  protocolre = /^([a-z][a-z0-9.+-]*:)?(\\/\\/)?([\\S\\s]*)/i,\n  whitespace = '[\\\\x09\\\\x0A\\\\x0B\\\\x0C\\\\x0D\\\\x20\\\\xA0\\\\u1680\\\\u180E\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200A\\\\u202F\\\\u205F\\\\u3000\\\\u2028\\\\u2029\\\\uFEFF]',\n  left = new RegExp('^' + whitespace + '+');\n\n/**\n * Trim a given string.\n *\n * @param {String} str String to trim.\n * @public\n */\nfunction trimLeft(str) {\n  return (str ? str : '').toString().replace(left, '');\n}\n\n/**\n * These are the parse rules for the URL parser, it informs the parser\n * about:\n *\n * 0. The char it Needs to parse, if it's a string it should be done using\n *    indexOf, RegExp using exec and NaN means set as current value.\n * 1. The property we should set when parsing this value.\n * 2. Indication if it's backwards or forward parsing, when set as number it's\n *    the value of extra chars that should be split off.\n * 3. Inherit from location if non existing in the parser.\n * 4. `toLowerCase` the resulting value.\n */\nvar rules = [['#', 'hash'],\n// Extract from the back.\n['?', 'query'],\n// Extract from the back.\nfunction sanitize(address) {\n  // Sanitize what is left of the address\n  return address.replace('\\\\', '/');\n}, ['/', 'pathname'],\n// Extract from the back.\n['@', 'auth', 1],\n// Extract from the front.\n[NaN, 'host', undefined, 1, 1],\n// Set left over value.\n[/:(\\d+)$/, 'port', undefined, 1],\n// RegExp the back.\n[NaN, 'hostname', undefined, 1, 1] // Set left over.\n];\n\n/**\n * These properties should not be copied or inherited from. This is only needed\n * for all non blob URL's as a blob URL does not include a hash, only the\n * origin.\n *\n * @type {Object}\n * @private\n */\nvar ignore = {\n  hash: 1,\n  query: 1\n};\n\n/**\n * The location object differs when your code is loaded through a normal page,\n * Worker or through a worker using a blob. And with the blobble begins the\n * trouble as the location object will contain the URL of the blob, not the\n * location of the page where our code is loaded in. The actual origin is\n * encoded in the `pathname` so we can thankfully generate a good \"default\"\n * location from it so we can generate proper relative URL's again.\n *\n * @param {Object|String} loc Optional default location object.\n * @returns {Object} lolcation object.\n * @public\n */\nfunction lolcation(loc) {\n  var globalVar;\n  if (typeof window !== 'undefined') globalVar = window;else if (typeof commonjsGlobal !== 'undefined') globalVar = commonjsGlobal;else if (typeof self !== 'undefined') globalVar = self;else globalVar = {};\n  var location = globalVar.location || {};\n  loc = loc || location;\n  var finaldestination = {},\n    type = typeof loc,\n    key;\n  if ('blob:' === loc.protocol) {\n    finaldestination = new Url(unescape(loc.pathname), {});\n  } else if ('string' === type) {\n    finaldestination = new Url(loc, {});\n    for (key in ignore) delete finaldestination[key];\n  } else if ('object' === type) {\n    for (key in loc) {\n      if (key in ignore) continue;\n      finaldestination[key] = loc[key];\n    }\n    if (finaldestination.slashes === undefined) {\n      finaldestination.slashes = slashes.test(loc.href);\n    }\n  }\n  return finaldestination;\n}\n\n/**\n * @typedef ProtocolExtract\n * @type Object\n * @property {String} protocol Protocol matched in the URL, in lowercase.\n * @property {Boolean} slashes `true` if protocol is followed by \"//\", else `false`.\n * @property {String} rest Rest of the URL that is not part of the protocol.\n */\n\n/**\n * Extract protocol information from a URL with/without double slash (\"//\").\n *\n * @param {String} address URL we want to extract from.\n * @return {ProtocolExtract} Extracted information.\n * @private\n */\nfunction extractProtocol(address) {\n  address = trimLeft(address);\n  var match = protocolre.exec(address);\n  return {\n    protocol: match[1] ? match[1].toLowerCase() : '',\n    slashes: !!match[2],\n    rest: match[3]\n  };\n}\n\n/**\n * Resolve a relative URL pathname against a base URL pathname.\n *\n * @param {String} relative Pathname of the relative URL.\n * @param {String} base Pathname of the base URL.\n * @return {String} Resolved pathname.\n * @private\n */\nfunction resolve(relative, base) {\n  if (relative === '') return base;\n  var path = (base || '/').split('/').slice(0, -1).concat(relative.split('/')),\n    i = path.length,\n    last = path[i - 1],\n    unshift = false,\n    up = 0;\n  while (i--) {\n    if (path[i] === '.') {\n      path.splice(i, 1);\n    } else if (path[i] === '..') {\n      path.splice(i, 1);\n      up++;\n    } else if (up) {\n      if (i === 0) unshift = true;\n      path.splice(i, 1);\n      up--;\n    }\n  }\n  if (unshift) path.unshift('');\n  if (last === '.' || last === '..') path.push('');\n  return path.join('/');\n}\n\n/**\n * The actual URL instance. Instead of returning an object we've opted-in to\n * create an actual constructor as it's much more memory efficient and\n * faster and it pleases my OCD.\n *\n * It is worth noting that we should not use `URL` as class name to prevent\n * clashes with the global URL instance that got introduced in browsers.\n *\n * @constructor\n * @param {String} address URL we want to parse.\n * @param {Object|String} [location] Location defaults for relative paths.\n * @param {Boolean|Function} [parser] Parser for the query string.\n * @private\n */\nfunction Url(address, location, parser) {\n  address = trimLeft(address);\n  if (!(this instanceof Url)) {\n    return new Url(address, location, parser);\n  }\n  var relative,\n    extracted,\n    parse,\n    instruction,\n    index,\n    key,\n    instructions = rules.slice(),\n    type = typeof location,\n    url = this,\n    i = 0;\n\n  //\n  // The following if statements allows this module two have compatibility with\n  // 2 different API:\n  //\n  // 1. Node.js's `url.parse` api which accepts a URL, boolean as arguments\n  //    where the boolean indicates that the query string should also be parsed.\n  //\n  // 2. The `URL` interface of the browser which accepts a URL, object as\n  //    arguments. The supplied object will be used as default values / fall-back\n  //    for relative paths.\n  //\n  if ('object' !== type && 'string' !== type) {\n    parser = location;\n    location = null;\n  }\n  if (parser && 'function' !== typeof parser) parser = querystringify_1.parse;\n  location = lolcation(location);\n\n  //\n  // Extract protocol information before running the instructions.\n  //\n  extracted = extractProtocol(address || '');\n  relative = !extracted.protocol && !extracted.slashes;\n  url.slashes = extracted.slashes || relative && location.slashes;\n  url.protocol = extracted.protocol || location.protocol || '';\n  address = extracted.rest;\n\n  //\n  // When the authority component is absent the URL starts with a path\n  // component.\n  //\n  if (!extracted.slashes) instructions[3] = [/(.*)/, 'pathname'];\n  for (; i < instructions.length; i++) {\n    instruction = instructions[i];\n    if (typeof instruction === 'function') {\n      address = instruction(address);\n      continue;\n    }\n    parse = instruction[0];\n    key = instruction[1];\n    if (parse !== parse) {\n      url[key] = address;\n    } else if ('string' === typeof parse) {\n      if (~(index = address.indexOf(parse))) {\n        if ('number' === typeof instruction[2]) {\n          url[key] = address.slice(0, index);\n          address = address.slice(index + instruction[2]);\n        } else {\n          url[key] = address.slice(index);\n          address = address.slice(0, index);\n        }\n      }\n    } else if (index = parse.exec(address)) {\n      url[key] = index[1];\n      address = address.slice(0, index.index);\n    }\n    url[key] = url[key] || (relative && instruction[3] ? location[key] || '' : '');\n\n    //\n    // Hostname, host and protocol should be lowercased so they can be used to\n    // create a proper `origin`.\n    //\n    if (instruction[4]) url[key] = url[key].toLowerCase();\n  }\n\n  //\n  // Also parse the supplied query string in to an object. If we're supplied\n  // with a custom parser as function use that instead of the default build-in\n  // parser.\n  //\n  if (parser) url.query = parser(url.query);\n\n  //\n  // If the URL is relative, resolve the pathname against the base URL.\n  //\n  if (relative && location.slashes && url.pathname.charAt(0) !== '/' && (url.pathname !== '' || location.pathname !== '')) {\n    url.pathname = resolve(url.pathname, location.pathname);\n  }\n\n  //\n  // We should not add port numbers if they are already the default port number\n  // for a given protocol. As the host also contains the port number we're going\n  // override it with the hostname which contains no port number.\n  //\n  if (!requiresPort(url.port, url.protocol)) {\n    url.host = url.hostname;\n    url.port = '';\n  }\n\n  //\n  // Parse down the `auth` for the username and password.\n  //\n  url.username = url.password = '';\n  if (url.auth) {\n    instruction = url.auth.split(':');\n    url.username = instruction[0] || '';\n    url.password = instruction[1] || '';\n  }\n  url.origin = url.protocol && url.host && url.protocol !== 'file:' ? url.protocol + '//' + url.host : 'null';\n\n  //\n  // The href is just the compiled result.\n  //\n  url.href = url.toString();\n}\n\n/**\n * This is convenience method for changing properties in the URL instance to\n * insure that they all propagate correctly.\n *\n * @param {String} part          Property we need to adjust.\n * @param {Mixed} value          The newly assigned value.\n * @param {Boolean|Function} fn  When setting the query, it will be the function\n *                               used to parse the query.\n *                               When setting the protocol, double slash will be\n *                               removed from the final url if it is true.\n * @returns {URL} URL instance for chaining.\n * @public\n */\nfunction set(part, value, fn) {\n  var url = this;\n  switch (part) {\n    case 'query':\n      if ('string' === typeof value && value.length) {\n        value = (fn || querystringify_1.parse)(value);\n      }\n      url[part] = value;\n      break;\n    case 'port':\n      url[part] = value;\n      if (!requiresPort(value, url.protocol)) {\n        url.host = url.hostname;\n        url[part] = '';\n      } else if (value) {\n        url.host = url.hostname + ':' + value;\n      }\n      break;\n    case 'hostname':\n      url[part] = value;\n      if (url.port) value += ':' + url.port;\n      url.host = value;\n      break;\n    case 'host':\n      url[part] = value;\n      if (/:\\d+$/.test(value)) {\n        value = value.split(':');\n        url.port = value.pop();\n        url.hostname = value.join(':');\n      } else {\n        url.hostname = value;\n        url.port = '';\n      }\n      break;\n    case 'protocol':\n      url.protocol = value.toLowerCase();\n      url.slashes = !fn;\n      break;\n    case 'pathname':\n    case 'hash':\n      if (value) {\n        var char = part === 'pathname' ? '/' : '#';\n        url[part] = value.charAt(0) !== char ? char + value : value;\n      } else {\n        url[part] = value;\n      }\n      break;\n    default:\n      url[part] = value;\n  }\n  for (var i = 0; i < rules.length; i++) {\n    var ins = rules[i];\n    if (ins[4]) url[ins[1]] = url[ins[1]].toLowerCase();\n  }\n  url.origin = url.protocol && url.host && url.protocol !== 'file:' ? url.protocol + '//' + url.host : 'null';\n  url.href = url.toString();\n  return url;\n}\n\n/**\n * Transform the properties back in to a valid and full URL string.\n *\n * @param {Function} stringify Optional query stringify function.\n * @returns {String} Compiled version of the URL.\n * @public\n */\nfunction toString(stringify) {\n  if (!stringify || 'function' !== typeof stringify) stringify = querystringify_1.stringify;\n  var query,\n    url = this,\n    protocol = url.protocol;\n  if (protocol && protocol.charAt(protocol.length - 1) !== ':') protocol += ':';\n  var result = protocol + (url.slashes ? '//' : '');\n  if (url.username) {\n    result += url.username;\n    if (url.password) result += ':' + url.password;\n    result += '@';\n  }\n  result += url.host + url.pathname;\n  query = 'object' === typeof url.query ? stringify(url.query) : url.query;\n  if (query) result += '?' !== query.charAt(0) ? '?' + query : query;\n  if (url.hash) result += url.hash;\n  return result;\n}\nUrl.prototype = {\n  set: set,\n  toString: toString\n};\n\n//\n// Expose the URL parser and some additional properties that might be useful for\n// others or testing.\n//\nUrl.extractProtocol = extractProtocol;\nUrl.location = lolcation;\nUrl.trimLeft = trimLeft;\nUrl.qs = querystringify_1;\nvar urlParse = Url;\n\n/**\n * parseURL - decompose a URL into its parts\n * @param  {String} url a URL\n * @return {Object} parts of the URL, including the following\n *\n * 'https://www.yahoo.com:1234/mypage?test=yes#abc'\n *\n * {\n *   host: 'www.yahoo.com:1234',\n *   protocol: 'https:',\n *   search: '?test=yes',\n *   hash: '#abc',\n *   href: 'https://www.yahoo.com:1234/mypage?test=yes#abc',\n *   pathname: '/mypage',\n *   fullpath: '/mypage?test=yes'\n * }\n */\nfunction parseURL(url) {\n  var parsedUrl = new urlParse(url);\n  if (!parsedUrl.host) {\n    // eslint-disable-next-line no-self-assign\n    parsedUrl.href = parsedUrl.href; // IE: load the host and protocol\n  }\n\n  var pathname = parsedUrl.pathname;\n  if (pathname.charAt(0) !== '/') {\n    pathname = '/' + pathname; // IE: prepend leading slash\n  }\n\n  var host = parsedUrl.host;\n  if (parsedUrl.port === '80' || parsedUrl.port === '443') {\n    host = parsedUrl.hostname; // IE: remove default port\n  }\n\n  return {\n    host: host,\n    protocol: parsedUrl.protocol,\n    search: parsedUrl.query,\n    hash: parsedUrl.hash,\n    href: parsedUrl.href,\n    pathname: pathname,\n    fullpath: pathname + (parsedUrl.query || '') + (parsedUrl.hash || '')\n  };\n}\n\n/**\n * Registry\n *\n * A registry is a map of HTTP verbs to route recognizers.\n */\nvar Registry = /** @class */function () {\n  function Registry( /* host */\n  ) {\n    // Herein we keep track of RouteRecognizer instances\n    // keyed by HTTP method. Feel free to add more as needed.\n    this.verbs = {\n      GET: new RouteRecognizer(),\n      PUT: new RouteRecognizer(),\n      POST: new RouteRecognizer(),\n      DELETE: new RouteRecognizer(),\n      PATCH: new RouteRecognizer(),\n      HEAD: new RouteRecognizer(),\n      OPTIONS: new RouteRecognizer()\n    };\n  }\n  return Registry;\n}();\n\n/**\n * Hosts\n *\n * a map of hosts to Registries, ultimately allowing\n * a per-host-and-port, per HTTP verb lookup of RouteRecognizers\n */\nvar Hosts = /** @class */function () {\n  function Hosts() {\n    this.registries = {};\n  }\n  /**\n   * Hosts#forURL - retrieve a map of HTTP verbs to RouteRecognizers\n   *                for a given URL\n   *\n   * @param  {String} url a URL\n   * @return {Registry}   a map of HTTP verbs to RouteRecognizers\n   *                      corresponding to the provided URL's\n   *                      hostname and port\n   */\n  Hosts.prototype.forURL = function (url) {\n    var host = parseURL(url).host;\n    var registry = this.registries[host];\n    if (registry === undefined) {\n      registry = this.registries[host] = new Registry( /*host*/);\n    }\n    return registry.verbs;\n  };\n  return Hosts;\n}();\nfunction createPassthrough(fakeXHR, nativeXMLHttpRequest) {\n  // event types to handle on the xhr\n  var evts = ['error', 'timeout', 'abort', 'readystatechange'];\n  // event types to handle on the xhr.upload\n  var uploadEvents = [];\n  // properties to copy from the native xhr to fake xhr\n  var lifecycleProps = ['readyState', 'responseText', 'response', 'responseXML', 'responseURL', 'status', 'statusText'];\n  var xhr = fakeXHR._passthroughRequest = new nativeXMLHttpRequest();\n  xhr.open(fakeXHR.method, fakeXHR.url, fakeXHR.async, fakeXHR.username, fakeXHR.password);\n  if (fakeXHR.responseType === 'arraybuffer') {\n    lifecycleProps = ['readyState', 'response', 'status', 'statusText'];\n    xhr.responseType = fakeXHR.responseType;\n  }\n  // use onload if the browser supports it\n  if ('onload' in xhr) {\n    evts.push('load');\n  }\n  // add progress event for async calls\n  // avoid using progress events for sync calls, they will hang https://bugs.webkit.org/show_bug.cgi?id=40996.\n  if (fakeXHR.async && fakeXHR.responseType !== 'arraybuffer') {\n    evts.push('progress');\n    uploadEvents.push('progress');\n  }\n  // update `propertyNames` properties from `fromXHR` to `toXHR`\n  function copyLifecycleProperties(propertyNames, fromXHR, toXHR) {\n    for (var i = 0; i < propertyNames.length; i++) {\n      var prop = propertyNames[i];\n      if (prop in fromXHR) {\n        toXHR[prop] = fromXHR[prop];\n      }\n    }\n  }\n  // fire fake event on `eventable`\n  function dispatchEvent(eventable, eventType, event) {\n    eventable.dispatchEvent(event);\n    if (eventable['on' + eventType]) {\n      eventable['on' + eventType](event);\n    }\n  }\n  // set the on- handler on the native xhr for the given eventType\n  function createHandler(eventType) {\n    xhr['on' + eventType] = function (event) {\n      copyLifecycleProperties(lifecycleProps, xhr, fakeXHR);\n      dispatchEvent(fakeXHR, eventType, event);\n    };\n  }\n  // set the on- handler on the native xhr's `upload` property for\n  // the given eventType\n  function createUploadHandler(eventType) {\n    if (xhr.upload && fakeXHR.upload && fakeXHR.upload['on' + eventType]) {\n      xhr.upload['on' + eventType] = function (event) {\n        dispatchEvent(fakeXHR.upload, eventType, event);\n      };\n    }\n  }\n  var i;\n  for (i = 0; i < evts.length; i++) {\n    createHandler(evts[i]);\n  }\n  for (i = 0; i < uploadEvents.length; i++) {\n    createUploadHandler(uploadEvents[i]);\n  }\n  if (fakeXHR.async) {\n    xhr.timeout = fakeXHR.timeout;\n    xhr.withCredentials = fakeXHR.withCredentials;\n  }\n  for (var h in fakeXHR.requestHeaders) {\n    xhr.setRequestHeader(h, fakeXHR.requestHeaders[h]);\n  }\n  return xhr;\n}\nfunction interceptor(ctx) {\n  function FakeRequest() {\n    // super()\n    FakeXMLHttpRequest.call(this);\n  }\n  FakeRequest.prototype = Object.create(FakeXMLHttpRequest.prototype);\n  FakeRequest.prototype.constructor = FakeRequest;\n  // extend\n  FakeRequest.prototype.send = function send() {\n    this.sendArguments = arguments;\n    if (!ctx.pretender.running) {\n      throw new Error('You shut down a Pretender instance while there was a pending request. ' + 'That request just tried to complete. Check to see if you accidentally shut down ' + 'a pretender earlier than you intended to');\n    }\n    FakeXMLHttpRequest.prototype.send.apply(this, arguments);\n    if (ctx.pretender.checkPassthrough(this)) {\n      this.passthrough();\n    } else {\n      ctx.pretender.handleRequest(this);\n    }\n  };\n  FakeRequest.prototype.passthrough = function passthrough() {\n    if (!this.sendArguments) {\n      throw new Error('You attempted to passthrough a FakeRequest that was never sent. ' + 'Call `.send()` on the original request first');\n    }\n    var xhr = createPassthrough(this, ctx.pretender._nativeXMLHttpRequest);\n    xhr.send.apply(xhr, this.sendArguments);\n    return xhr;\n  };\n  FakeRequest.prototype._passthroughCheck = function (method, args) {\n    if (this._passthroughRequest) {\n      return this._passthroughRequest[method].apply(this._passthroughRequest, args);\n    }\n    return FakeXMLHttpRequest.prototype[method].apply(this, args);\n  };\n  FakeRequest.prototype.abort = function abort() {\n    return this._passthroughCheck('abort', arguments);\n  };\n  FakeRequest.prototype.getResponseHeader = function getResponseHeader() {\n    return this._passthroughCheck('getResponseHeader', arguments);\n  };\n  FakeRequest.prototype.getAllResponseHeaders = function getAllResponseHeaders() {\n    return this._passthroughCheck('getAllResponseHeaders', arguments);\n  };\n  if (ctx.pretender._nativeXMLHttpRequest.prototype._passthroughCheck) {\n    // eslint-disable-next-line no-console\n    console.warn('You created a second Pretender instance while there was already one running. ' + 'Running two Pretender servers at once will lead to unexpected results and will ' + 'be removed entirely in a future major version.' + 'Please call .shutdown() on your instances when you no longer need them to respond.');\n  }\n  return FakeRequest;\n}\nfunction Pretender( /* routeMap1, routeMap2, ..., options*/\n) {\n  this.hosts = new Hosts();\n  var lastArg = arguments[arguments.length - 1];\n  var options = typeof lastArg === 'object' ? lastArg : null;\n  var shouldNotTrack = options && options.trackRequests === false;\n  var noopArray = {\n    push: function () {},\n    length: 0\n  };\n  this.handlers = [];\n  this.handledRequests = shouldNotTrack ? noopArray : [];\n  this.passthroughRequests = shouldNotTrack ? noopArray : [];\n  this.unhandledRequests = shouldNotTrack ? noopArray : [];\n  this.requestReferences = [];\n  this.forcePassthrough = options && options.forcePassthrough === true;\n  this.disableUnhandled = options && options.disableUnhandled === true;\n  // reference the native XMLHttpRequest object so\n  // it can be restored later\n  this._nativeXMLHttpRequest = self.XMLHttpRequest;\n  this.running = false;\n  var ctx = {\n    pretender: this\n  };\n  this.ctx = ctx;\n  // capture xhr requests, channeling them into\n  // the route map.\n  self.XMLHttpRequest = interceptor(ctx);\n  // polyfill fetch when xhr is ready\n  this._fetchProps = FakeFetch ? ['fetch', 'Headers', 'Request', 'Response'] : [];\n  this._fetchProps.forEach(function (name) {\n    this['_native' + name] = self[name];\n    self[name] = FakeFetch[name];\n  }, this);\n  // 'start' the server\n  this.running = true;\n  // trigger the route map DSL.\n  var argLength = options ? arguments.length - 1 : arguments.length;\n  for (var i = 0; i < argLength; i++) {\n    this.map(arguments[i]);\n  }\n}\nfunction verbify(verb) {\n  return function (path, handler, async) {\n    return this.register(verb, path, handler, async);\n  };\n}\nfunction scheduleProgressEvent(request, startTime, totalTime) {\n  setTimeout(function () {\n    if (!request.aborted && !request.status) {\n      var elapsedTime = new Date().getTime() - startTime.getTime();\n      var progressTotal = void 0;\n      var body = request.requestBody;\n      if (!body) {\n        progressTotal = 0;\n      } else {\n        // Support Blob, BufferSource, USVString, ArrayBufferView\n        progressTotal = body.byteLength || body.size || body.length || 0;\n      }\n      var progressTransmitted = totalTime <= 0 ? 0 : elapsedTime / totalTime * progressTotal;\n      // ProgressEvent expects loaded, total\n      // https://xhr.spec.whatwg.org/#interface-progressevent\n      request.upload._progress(true, progressTransmitted, progressTotal);\n      request._progress(true, progressTransmitted, progressTotal);\n      scheduleProgressEvent(request, startTime, totalTime);\n    }\n  }, 50);\n}\nfunction isArray(array) {\n  return Object.prototype.toString.call(array) === '[object Array]';\n}\nvar PASSTHROUGH = {};\nPretender.prototype = {\n  get: verbify('GET'),\n  post: verbify('POST'),\n  put: verbify('PUT'),\n  'delete': verbify('DELETE'),\n  patch: verbify('PATCH'),\n  head: verbify('HEAD'),\n  options: verbify('OPTIONS'),\n  map: function (maps) {\n    maps.call(this);\n  },\n  register: function register(verb, url, handler, async) {\n    if (!handler) {\n      throw new Error('The function you tried passing to Pretender to handle ' + verb + ' ' + url + ' is undefined or missing.');\n    }\n    handler.numberOfCalls = 0;\n    handler.async = async;\n    this.handlers.push(handler);\n    var registry = this.hosts.forURL(url)[verb];\n    registry.add([{\n      path: parseURL(url).fullpath,\n      handler: handler\n    }]);\n    return handler;\n  },\n  passthrough: PASSTHROUGH,\n  checkPassthrough: function checkPassthrough(request) {\n    var verb = request.method.toUpperCase();\n    var path = parseURL(request.url).fullpath;\n    var recognized = this.hosts.forURL(request.url)[verb].recognize(path);\n    var match = recognized && recognized[0];\n    if (match && match.handler === PASSTHROUGH || this.forcePassthrough) {\n      this.passthroughRequests.push(request);\n      this.passthroughRequest(verb, path, request);\n      return true;\n    }\n    return false;\n  },\n  handleRequest: function handleRequest(request) {\n    var verb = request.method.toUpperCase();\n    var path = request.url;\n    var handler = this._handlerFor(verb, path, request);\n    if (handler) {\n      handler.handler.numberOfCalls++;\n      var async_1 = handler.handler.async;\n      this.handledRequests.push(request);\n      var pretender_1 = this;\n      var _handleRequest_1 = function (statusHeadersAndBody) {\n        if (!isArray(statusHeadersAndBody)) {\n          var note = 'Remember to `return [status, headers, body];` in your route handler.';\n          throw new Error('Nothing returned by handler for ' + path + '. ' + note);\n        }\n        var status = statusHeadersAndBody[0];\n        var headers = pretender_1.prepareHeaders(statusHeadersAndBody[1]);\n        var body = pretender_1.prepareBody(statusHeadersAndBody[2], headers);\n        pretender_1.handleResponse(request, async_1, function () {\n          request.respond(status, headers, body);\n          pretender_1.handledRequest(verb, path, request);\n        });\n      };\n      try {\n        var result = handler.handler(request);\n        if (result && typeof result.then === 'function') {\n          // `result` is a promise, resolve it\n          result.then(function (resolvedResult) {\n            _handleRequest_1(resolvedResult);\n          });\n        } else {\n          _handleRequest_1(result);\n        }\n      } catch (error) {\n        this.erroredRequest(verb, path, request, error);\n        this.resolve(request);\n      }\n    } else {\n      if (!this.disableUnhandled) {\n        this.unhandledRequests.push(request);\n        this.unhandledRequest(verb, path, request);\n      }\n    }\n  },\n  handleResponse: function handleResponse(request, strategy, callback) {\n    var delay = typeof strategy === 'function' ? strategy() : strategy;\n    delay = typeof delay === 'boolean' || typeof delay === 'number' ? delay : 0;\n    if (delay === false) {\n      callback();\n    } else {\n      var pretender_2 = this;\n      pretender_2.requestReferences.push({\n        request: request,\n        callback: callback\n      });\n      if (delay !== true) {\n        scheduleProgressEvent(request, new Date(), delay);\n        setTimeout(function () {\n          pretender_2.resolve(request);\n        }, delay);\n      }\n    }\n  },\n  resolve: function resolve(request) {\n    for (var i = 0, len = this.requestReferences.length; i < len; i++) {\n      var res = this.requestReferences[i];\n      if (res.request === request) {\n        res.callback();\n        this.requestReferences.splice(i, 1);\n        break;\n      }\n    }\n  },\n  requiresManualResolution: function (verb, path) {\n    var handler = this._handlerFor(verb.toUpperCase(), path, {});\n    if (!handler) {\n      return false;\n    }\n    var async = handler.handler.async;\n    return typeof async === 'function' ? async() === true : async === true;\n  },\n  prepareBody: function (body) {\n    return body;\n  },\n  prepareHeaders: function (headers) {\n    return headers;\n  },\n  handledRequest: function /* verb, path, request */ () {},\n  passthroughRequest: function /* verb, path, request */ () {},\n  unhandledRequest: function (verb, path /*, request */) {\n    throw new Error('Pretender intercepted ' + verb + ' ' + path + ' but no handler was defined for this type of request');\n  },\n  erroredRequest: function (verb, path, request, error) {\n    error.message = 'Pretender intercepted ' + verb + ' ' + path + ' but encountered an error: ' + error.message;\n    throw error;\n  },\n  _handlerFor: function (verb, url, request) {\n    var registry = this.hosts.forURL(url)[verb];\n    var matches = registry.recognize(parseURL(url).fullpath);\n    var match = matches ? matches[0] : null;\n    if (match) {\n      request.params = match.params;\n      request.queryParams = matches.queryParams;\n    }\n    return match;\n  },\n  shutdown: function shutdown() {\n    self.XMLHttpRequest = this._nativeXMLHttpRequest;\n    this._fetchProps.forEach(function (name) {\n      self[name] = this['_native' + name];\n    }, this);\n    this.ctx.pretender = undefined;\n    // 'stop' the server\n    this.running = false;\n  }\n};\nPretender.parseURL = parseURL;\nPretender.Hosts = Hosts;\nPretender.Registry = Registry;\nexport default Pretender;","map":{"version":3,"names":["RouteRecognizer","FakeXMLHttpRequest","support","searchParams","self","iterable","Symbol","blob","Blob","e","formData","arrayBuffer","isDataView","obj","DataView","prototype","isPrototypeOf","viewClasses","isArrayBufferView","ArrayBuffer","isView","indexOf","Object","toString","call","normalizeName","name","String","test","TypeError","toLowerCase","normalizeValue","value","iteratorFor","items","iterator","next","shift","done","undefined","Headers","headers","map","forEach","append","Array","isArray","header","getOwnPropertyNames","oldValue","get","has","hasOwnProperty","set","callback","thisArg","keys","push","values","entries","consumed","body","bodyUsed","Promise","reject","fileReaderReady","reader","resolve","onload","result","onerror","error","readBlobAsArrayBuffer","FileReader","promise","readAsArrayBuffer","readBlobAsText","readAsText","readArrayBufferAsText","buf","view","Uint8Array","chars","length","i","fromCharCode","join","bufferClone","slice","byteLength","buffer","Body","_initBody","_bodyInit","_bodyText","_bodyBlob","FormData","_bodyFormData","URLSearchParams","_bodyArrayBuffer","type","rejected","Error","then","text","decode","json","JSON","parse","methods","normalizeMethod","method","upcased","toUpperCase","Request","input","options","url","credentials","mode","signal","referrer","clone","form","trim","split","bytes","replace","decodeURIComponent","parseHeaders","rawHeaders","preProcessedHeaders","line","parts","key","Response","bodyInit","status","ok","statusText","response","redirectStatuses","redirect","RangeError","location","DOMException","err","message","stack","create","constructor","fetch","init","request","aborted","xhr","XMLHttpRequest","abortXhr","abort","getAllResponseHeaders","responseURL","responseText","ontimeout","onabort","open","withCredentials","responseType","setRequestHeader","addEventListener","onreadystatechange","readyState","removeEventListener","send","polyfill","FakeFetch","freeze","__proto__","commonjsGlobal","globalThis","window","global","requiresPort","required","port","protocol","undef","decode$1","querystring","query","parser","part","exec","querystringify","prefix","pairs","isNaN","encodeURIComponent","stringify","querystringify_1","slashes","protocolre","whitespace","left","RegExp","trimLeft","str","rules","sanitize","address","NaN","ignore","hash","lolcation","loc","globalVar","finaldestination","Url","unescape","pathname","href","extractProtocol","match","rest","relative","base","path","concat","last","unshift","up","splice","extracted","instruction","index","instructions","charAt","host","hostname","username","password","auth","origin","fn","pop","char","ins","qs","urlParse","parseURL","parsedUrl","search","fullpath","Registry","verbs","GET","PUT","POST","DELETE","PATCH","HEAD","OPTIONS","Hosts","registries","forURL","registry","createPassthrough","fakeXHR","nativeXMLHttpRequest","evts","uploadEvents","lifecycleProps","_passthroughRequest","async","copyLifecycleProperties","propertyNames","fromXHR","toXHR","prop","dispatchEvent","eventable","eventType","event","createHandler","createUploadHandler","upload","timeout","h","requestHeaders","interceptor","ctx","FakeRequest","sendArguments","arguments","pretender","running","apply","checkPassthrough","passthrough","handleRequest","_nativeXMLHttpRequest","_passthroughCheck","args","getResponseHeader","console","warn","Pretender","hosts","lastArg","shouldNotTrack","trackRequests","noopArray","handlers","handledRequests","passthroughRequests","unhandledRequests","requestReferences","forcePassthrough","disableUnhandled","_fetchProps","argLength","verbify","verb","handler","register","scheduleProgressEvent","startTime","totalTime","setTimeout","elapsedTime","Date","getTime","progressTotal","requestBody","size","progressTransmitted","_progress","array","PASSTHROUGH","post","put","patch","head","maps","numberOfCalls","add","recognized","recognize","passthroughRequest","_handlerFor","async_1","pretender_1","_handleRequest_1","statusHeadersAndBody","note","prepareHeaders","prepareBody","handleResponse","respond","handledRequest","resolvedResult","erroredRequest","unhandledRequest","strategy","delay","pretender_2","len","res","requiresManualResolution","matches","params","queryParams","shutdown"],"sources":["/Users/ganesan/Documents/GitHub/assessment/node_modules/pretender/dist/pretender.es.js"],"sourcesContent":["import RouteRecognizer from 'route-recognizer';\nimport FakeXMLHttpRequest from 'fake-xml-http-request';\n\nvar support = {\n  searchParams: 'URLSearchParams' in self,\n  iterable: 'Symbol' in self && 'iterator' in Symbol,\n  blob:\n    'FileReader' in self &&\n    'Blob' in self &&\n    (function() {\n      try {\n        new Blob();\n        return true\n      } catch (e) {\n        return false\n      }\n    })(),\n  formData: 'FormData' in self,\n  arrayBuffer: 'ArrayBuffer' in self\n};\n\nfunction isDataView(obj) {\n  return obj && DataView.prototype.isPrototypeOf(obj)\n}\n\nif (support.arrayBuffer) {\n  var viewClasses = [\n    '[object Int8Array]',\n    '[object Uint8Array]',\n    '[object Uint8ClampedArray]',\n    '[object Int16Array]',\n    '[object Uint16Array]',\n    '[object Int32Array]',\n    '[object Uint32Array]',\n    '[object Float32Array]',\n    '[object Float64Array]'\n  ];\n\n  var isArrayBufferView =\n    ArrayBuffer.isView ||\n    function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    };\n}\n\nfunction normalizeName(name) {\n  if (typeof name !== 'string') {\n    name = String(name);\n  }\n  if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n    throw new TypeError('Invalid character in header field name')\n  }\n  return name.toLowerCase()\n}\n\nfunction normalizeValue(value) {\n  if (typeof value !== 'string') {\n    value = String(value);\n  }\n  return value\n}\n\n// Build a destructive iterator for the value list\nfunction iteratorFor(items) {\n  var iterator = {\n    next: function() {\n      var value = items.shift();\n      return {done: value === undefined, value: value}\n    }\n  };\n\n  if (support.iterable) {\n    iterator[Symbol.iterator] = function() {\n      return iterator\n    };\n  }\n\n  return iterator\n}\n\nfunction Headers(headers) {\n  this.map = {};\n\n  if (headers instanceof Headers) {\n    headers.forEach(function(value, name) {\n      this.append(name, value);\n    }, this);\n  } else if (Array.isArray(headers)) {\n    headers.forEach(function(header) {\n      this.append(header[0], header[1]);\n    }, this);\n  } else if (headers) {\n    Object.getOwnPropertyNames(headers).forEach(function(name) {\n      this.append(name, headers[name]);\n    }, this);\n  }\n}\n\nHeaders.prototype.append = function(name, value) {\n  name = normalizeName(name);\n  value = normalizeValue(value);\n  var oldValue = this.map[name];\n  this.map[name] = oldValue ? oldValue + ', ' + value : value;\n};\n\nHeaders.prototype['delete'] = function(name) {\n  delete this.map[normalizeName(name)];\n};\n\nHeaders.prototype.get = function(name) {\n  name = normalizeName(name);\n  return this.has(name) ? this.map[name] : null\n};\n\nHeaders.prototype.has = function(name) {\n  return this.map.hasOwnProperty(normalizeName(name))\n};\n\nHeaders.prototype.set = function(name, value) {\n  this.map[normalizeName(name)] = normalizeValue(value);\n};\n\nHeaders.prototype.forEach = function(callback, thisArg) {\n  for (var name in this.map) {\n    if (this.map.hasOwnProperty(name)) {\n      callback.call(thisArg, this.map[name], name, this);\n    }\n  }\n};\n\nHeaders.prototype.keys = function() {\n  var items = [];\n  this.forEach(function(value, name) {\n    items.push(name);\n  });\n  return iteratorFor(items)\n};\n\nHeaders.prototype.values = function() {\n  var items = [];\n  this.forEach(function(value) {\n    items.push(value);\n  });\n  return iteratorFor(items)\n};\n\nHeaders.prototype.entries = function() {\n  var items = [];\n  this.forEach(function(value, name) {\n    items.push([name, value]);\n  });\n  return iteratorFor(items)\n};\n\nif (support.iterable) {\n  Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n}\n\nfunction consumed(body) {\n  if (body.bodyUsed) {\n    return Promise.reject(new TypeError('Already read'))\n  }\n  body.bodyUsed = true;\n}\n\nfunction fileReaderReady(reader) {\n  return new Promise(function(resolve, reject) {\n    reader.onload = function() {\n      resolve(reader.result);\n    };\n    reader.onerror = function() {\n      reject(reader.error);\n    };\n  })\n}\n\nfunction readBlobAsArrayBuffer(blob) {\n  var reader = new FileReader();\n  var promise = fileReaderReady(reader);\n  reader.readAsArrayBuffer(blob);\n  return promise\n}\n\nfunction readBlobAsText(blob) {\n  var reader = new FileReader();\n  var promise = fileReaderReady(reader);\n  reader.readAsText(blob);\n  return promise\n}\n\nfunction readArrayBufferAsText(buf) {\n  var view = new Uint8Array(buf);\n  var chars = new Array(view.length);\n\n  for (var i = 0; i < view.length; i++) {\n    chars[i] = String.fromCharCode(view[i]);\n  }\n  return chars.join('')\n}\n\nfunction bufferClone(buf) {\n  if (buf.slice) {\n    return buf.slice(0)\n  } else {\n    var view = new Uint8Array(buf.byteLength);\n    view.set(new Uint8Array(buf));\n    return view.buffer\n  }\n}\n\nfunction Body() {\n  this.bodyUsed = false;\n\n  this._initBody = function(body) {\n    this._bodyInit = body;\n    if (!body) {\n      this._bodyText = '';\n    } else if (typeof body === 'string') {\n      this._bodyText = body;\n    } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n      this._bodyBlob = body;\n    } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n      this._bodyFormData = body;\n    } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n      this._bodyText = body.toString();\n    } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n      this._bodyArrayBuffer = bufferClone(body.buffer);\n      // IE 10-11 can't handle a DataView body.\n      this._bodyInit = new Blob([this._bodyArrayBuffer]);\n    } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n      this._bodyArrayBuffer = bufferClone(body);\n    } else {\n      this._bodyText = body = Object.prototype.toString.call(body);\n    }\n\n    if (!this.headers.get('content-type')) {\n      if (typeof body === 'string') {\n        this.headers.set('content-type', 'text/plain;charset=UTF-8');\n      } else if (this._bodyBlob && this._bodyBlob.type) {\n        this.headers.set('content-type', this._bodyBlob.type);\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n      }\n    }\n  };\n\n  if (support.blob) {\n    this.blob = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return Promise.resolve(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as blob')\n      } else {\n        return Promise.resolve(new Blob([this._bodyText]))\n      }\n    };\n\n    this.arrayBuffer = function() {\n      if (this._bodyArrayBuffer) {\n        return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n      } else {\n        return this.blob().then(readBlobAsArrayBuffer)\n      }\n    };\n  }\n\n  this.text = function() {\n    var rejected = consumed(this);\n    if (rejected) {\n      return rejected\n    }\n\n    if (this._bodyBlob) {\n      return readBlobAsText(this._bodyBlob)\n    } else if (this._bodyArrayBuffer) {\n      return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n    } else if (this._bodyFormData) {\n      throw new Error('could not read FormData body as text')\n    } else {\n      return Promise.resolve(this._bodyText)\n    }\n  };\n\n  if (support.formData) {\n    this.formData = function() {\n      return this.text().then(decode)\n    };\n  }\n\n  this.json = function() {\n    return this.text().then(JSON.parse)\n  };\n\n  return this\n}\n\n// HTTP methods whose capitalization should be normalized\nvar methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\nfunction normalizeMethod(method) {\n  var upcased = method.toUpperCase();\n  return methods.indexOf(upcased) > -1 ? upcased : method\n}\n\nfunction Request(input, options) {\n  options = options || {};\n  var body = options.body;\n\n  if (input instanceof Request) {\n    if (input.bodyUsed) {\n      throw new TypeError('Already read')\n    }\n    this.url = input.url;\n    this.credentials = input.credentials;\n    if (!options.headers) {\n      this.headers = new Headers(input.headers);\n    }\n    this.method = input.method;\n    this.mode = input.mode;\n    this.signal = input.signal;\n    if (!body && input._bodyInit != null) {\n      body = input._bodyInit;\n      input.bodyUsed = true;\n    }\n  } else {\n    this.url = String(input);\n  }\n\n  this.credentials = options.credentials || this.credentials || 'same-origin';\n  if (options.headers || !this.headers) {\n    this.headers = new Headers(options.headers);\n  }\n  this.method = normalizeMethod(options.method || this.method || 'GET');\n  this.mode = options.mode || this.mode || null;\n  this.signal = options.signal || this.signal;\n  this.referrer = null;\n\n  if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n    throw new TypeError('Body not allowed for GET or HEAD requests')\n  }\n  this._initBody(body);\n}\n\nRequest.prototype.clone = function() {\n  return new Request(this, {body: this._bodyInit})\n};\n\nfunction decode(body) {\n  var form = new FormData();\n  body\n    .trim()\n    .split('&')\n    .forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=');\n        var name = split.shift().replace(/\\+/g, ' ');\n        var value = split.join('=').replace(/\\+/g, ' ');\n        form.append(decodeURIComponent(name), decodeURIComponent(value));\n      }\n    });\n  return form\n}\n\nfunction parseHeaders(rawHeaders) {\n  var headers = new Headers();\n  // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n  // https://tools.ietf.org/html/rfc7230#section-3.2\n  var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n  preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n    var parts = line.split(':');\n    var key = parts.shift().trim();\n    if (key) {\n      var value = parts.join(':').trim();\n      headers.append(key, value);\n    }\n  });\n  return headers\n}\n\nBody.call(Request.prototype);\n\nfunction Response(bodyInit, options) {\n  if (!options) {\n    options = {};\n  }\n\n  this.type = 'default';\n  this.status = options.status === undefined ? 200 : options.status;\n  this.ok = this.status >= 200 && this.status < 300;\n  this.statusText = 'statusText' in options ? options.statusText : 'OK';\n  this.headers = new Headers(options.headers);\n  this.url = options.url || '';\n  this._initBody(bodyInit);\n}\n\nBody.call(Response.prototype);\n\nResponse.prototype.clone = function() {\n  return new Response(this._bodyInit, {\n    status: this.status,\n    statusText: this.statusText,\n    headers: new Headers(this.headers),\n    url: this.url\n  })\n};\n\nResponse.error = function() {\n  var response = new Response(null, {status: 0, statusText: ''});\n  response.type = 'error';\n  return response\n};\n\nvar redirectStatuses = [301, 302, 303, 307, 308];\n\nResponse.redirect = function(url, status) {\n  if (redirectStatuses.indexOf(status) === -1) {\n    throw new RangeError('Invalid status code')\n  }\n\n  return new Response(null, {status: status, headers: {location: url}})\n};\n\nvar DOMException = self.DOMException;\ntry {\n  new DOMException();\n} catch (err) {\n  DOMException = function(message, name) {\n    this.message = message;\n    this.name = name;\n    var error = Error(message);\n    this.stack = error.stack;\n  };\n  DOMException.prototype = Object.create(Error.prototype);\n  DOMException.prototype.constructor = DOMException;\n}\n\nfunction fetch(input, init) {\n  return new Promise(function(resolve, reject) {\n    var request = new Request(input, init);\n\n    if (request.signal && request.signal.aborted) {\n      return reject(new DOMException('Aborted', 'AbortError'))\n    }\n\n    var xhr = new XMLHttpRequest();\n\n    function abortXhr() {\n      xhr.abort();\n    }\n\n    xhr.onload = function() {\n      var options = {\n        status: xhr.status,\n        statusText: xhr.statusText,\n        headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n      };\n      options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n      var body = 'response' in xhr ? xhr.response : xhr.responseText;\n      resolve(new Response(body, options));\n    };\n\n    xhr.onerror = function() {\n      reject(new TypeError('Network request failed'));\n    };\n\n    xhr.ontimeout = function() {\n      reject(new TypeError('Network request failed'));\n    };\n\n    xhr.onabort = function() {\n      reject(new DOMException('Aborted', 'AbortError'));\n    };\n\n    xhr.open(request.method, request.url, true);\n\n    if (request.credentials === 'include') {\n      xhr.withCredentials = true;\n    } else if (request.credentials === 'omit') {\n      xhr.withCredentials = false;\n    }\n\n    if ('responseType' in xhr && support.blob) {\n      xhr.responseType = 'blob';\n    }\n\n    request.headers.forEach(function(value, name) {\n      xhr.setRequestHeader(name, value);\n    });\n\n    if (request.signal) {\n      request.signal.addEventListener('abort', abortXhr);\n\n      xhr.onreadystatechange = function() {\n        // DONE (success or failure)\n        if (xhr.readyState === 4) {\n          request.signal.removeEventListener('abort', abortXhr);\n        }\n      };\n    }\n\n    xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n  })\n}\n\nfetch.polyfill = true;\n\nif (!self.fetch) {\n  self.fetch = fetch;\n  self.Headers = Headers;\n  self.Request = Request;\n  self.Response = Response;\n}\n\nvar FakeFetch = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  Headers: Headers,\n  Request: Request,\n  Response: Response,\n  get DOMException () { return DOMException; },\n  fetch: fetch\n});\n\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n/**\n * Check if we're required to add a port number.\n *\n * @see https://url.spec.whatwg.org/#default-port\n * @param {Number|String} port Port number we need to check\n * @param {String} protocol Protocol we need to check against.\n * @returns {Boolean} Is it a default port for the given protocol\n * @api private\n */\nvar requiresPort = function required(port, protocol) {\n  protocol = protocol.split(':')[0];\n  port = +port;\n\n  if (!port) return false;\n\n  switch (protocol) {\n    case 'http':\n    case 'ws':\n    return port !== 80;\n\n    case 'https':\n    case 'wss':\n    return port !== 443;\n\n    case 'ftp':\n    return port !== 21;\n\n    case 'gopher':\n    return port !== 70;\n\n    case 'file':\n    return false;\n  }\n\n  return port !== 0;\n};\n\nvar has = Object.prototype.hasOwnProperty\n  , undef;\n\n/**\n * Decode a URI encoded string.\n *\n * @param {String} input The URI encoded string.\n * @returns {String|Null} The decoded string.\n * @api private\n */\nfunction decode$1(input) {\n  try {\n    return decodeURIComponent(input.replace(/\\+/g, ' '));\n  } catch (e) {\n    return null;\n  }\n}\n\n/**\n * Simple query string parser.\n *\n * @param {String} query The query string that needs to be parsed.\n * @returns {Object}\n * @api public\n */\nfunction querystring(query) {\n  var parser = /([^=?&]+)=?([^&]*)/g\n    , result = {}\n    , part;\n\n  while (part = parser.exec(query)) {\n    var key = decode$1(part[1])\n      , value = decode$1(part[2]);\n\n    //\n    // Prevent overriding of existing properties. This ensures that build-in\n    // methods like `toString` or __proto__ are not overriden by malicious\n    // querystrings.\n    //\n    // In the case if failed decoding, we want to omit the key/value pairs\n    // from the result.\n    //\n    if (key === null || value === null || key in result) continue;\n    result[key] = value;\n  }\n\n  return result;\n}\n\n/**\n * Transform a query string to an object.\n *\n * @param {Object} obj Object that should be transformed.\n * @param {String} prefix Optional prefix.\n * @returns {String}\n * @api public\n */\nfunction querystringify(obj, prefix) {\n  prefix = prefix || '';\n\n  var pairs = []\n    , value\n    , key;\n\n  //\n  // Optionally prefix with a '?' if needed\n  //\n  if ('string' !== typeof prefix) prefix = '?';\n\n  for (key in obj) {\n    if (has.call(obj, key)) {\n      value = obj[key];\n\n      //\n      // Edge cases where we actually want to encode the value to an empty\n      // string instead of the stringified value.\n      //\n      if (!value && (value === null || value === undef || isNaN(value))) {\n        value = '';\n      }\n\n      key = encodeURIComponent(key);\n      value = encodeURIComponent(value);\n\n      //\n      // If we failed to encode the strings, we should bail out as we don't\n      // want to add invalid strings to the query.\n      //\n      if (key === null || value === null) continue;\n      pairs.push(key +'='+ value);\n    }\n  }\n\n  return pairs.length ? prefix + pairs.join('&') : '';\n}\n\n//\n// Expose the module.\n//\nvar stringify = querystringify;\nvar parse = querystring;\n\nvar querystringify_1 = {\n\tstringify: stringify,\n\tparse: parse\n};\n\nvar slashes = /^[A-Za-z][A-Za-z0-9+-.]*:\\/\\//\n  , protocolre = /^([a-z][a-z0-9.+-]*:)?(\\/\\/)?([\\S\\s]*)/i\n  , whitespace = '[\\\\x09\\\\x0A\\\\x0B\\\\x0C\\\\x0D\\\\x20\\\\xA0\\\\u1680\\\\u180E\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200A\\\\u202F\\\\u205F\\\\u3000\\\\u2028\\\\u2029\\\\uFEFF]'\n  , left = new RegExp('^'+ whitespace +'+');\n\n/**\n * Trim a given string.\n *\n * @param {String} str String to trim.\n * @public\n */\nfunction trimLeft(str) {\n  return (str ? str : '').toString().replace(left, '');\n}\n\n/**\n * These are the parse rules for the URL parser, it informs the parser\n * about:\n *\n * 0. The char it Needs to parse, if it's a string it should be done using\n *    indexOf, RegExp using exec and NaN means set as current value.\n * 1. The property we should set when parsing this value.\n * 2. Indication if it's backwards or forward parsing, when set as number it's\n *    the value of extra chars that should be split off.\n * 3. Inherit from location if non existing in the parser.\n * 4. `toLowerCase` the resulting value.\n */\nvar rules = [\n  ['#', 'hash'],                        // Extract from the back.\n  ['?', 'query'],                       // Extract from the back.\n  function sanitize(address) {          // Sanitize what is left of the address\n    return address.replace('\\\\', '/');\n  },\n  ['/', 'pathname'],                    // Extract from the back.\n  ['@', 'auth', 1],                     // Extract from the front.\n  [NaN, 'host', undefined, 1, 1],       // Set left over value.\n  [/:(\\d+)$/, 'port', undefined, 1],    // RegExp the back.\n  [NaN, 'hostname', undefined, 1, 1]    // Set left over.\n];\n\n/**\n * These properties should not be copied or inherited from. This is only needed\n * for all non blob URL's as a blob URL does not include a hash, only the\n * origin.\n *\n * @type {Object}\n * @private\n */\nvar ignore = { hash: 1, query: 1 };\n\n/**\n * The location object differs when your code is loaded through a normal page,\n * Worker or through a worker using a blob. And with the blobble begins the\n * trouble as the location object will contain the URL of the blob, not the\n * location of the page where our code is loaded in. The actual origin is\n * encoded in the `pathname` so we can thankfully generate a good \"default\"\n * location from it so we can generate proper relative URL's again.\n *\n * @param {Object|String} loc Optional default location object.\n * @returns {Object} lolcation object.\n * @public\n */\nfunction lolcation(loc) {\n  var globalVar;\n\n  if (typeof window !== 'undefined') globalVar = window;\n  else if (typeof commonjsGlobal !== 'undefined') globalVar = commonjsGlobal;\n  else if (typeof self !== 'undefined') globalVar = self;\n  else globalVar = {};\n\n  var location = globalVar.location || {};\n  loc = loc || location;\n\n  var finaldestination = {}\n    , type = typeof loc\n    , key;\n\n  if ('blob:' === loc.protocol) {\n    finaldestination = new Url(unescape(loc.pathname), {});\n  } else if ('string' === type) {\n    finaldestination = new Url(loc, {});\n    for (key in ignore) delete finaldestination[key];\n  } else if ('object' === type) {\n    for (key in loc) {\n      if (key in ignore) continue;\n      finaldestination[key] = loc[key];\n    }\n\n    if (finaldestination.slashes === undefined) {\n      finaldestination.slashes = slashes.test(loc.href);\n    }\n  }\n\n  return finaldestination;\n}\n\n/**\n * @typedef ProtocolExtract\n * @type Object\n * @property {String} protocol Protocol matched in the URL, in lowercase.\n * @property {Boolean} slashes `true` if protocol is followed by \"//\", else `false`.\n * @property {String} rest Rest of the URL that is not part of the protocol.\n */\n\n/**\n * Extract protocol information from a URL with/without double slash (\"//\").\n *\n * @param {String} address URL we want to extract from.\n * @return {ProtocolExtract} Extracted information.\n * @private\n */\nfunction extractProtocol(address) {\n  address = trimLeft(address);\n  var match = protocolre.exec(address);\n\n  return {\n    protocol: match[1] ? match[1].toLowerCase() : '',\n    slashes: !!match[2],\n    rest: match[3]\n  };\n}\n\n/**\n * Resolve a relative URL pathname against a base URL pathname.\n *\n * @param {String} relative Pathname of the relative URL.\n * @param {String} base Pathname of the base URL.\n * @return {String} Resolved pathname.\n * @private\n */\nfunction resolve(relative, base) {\n  if (relative === '') return base;\n\n  var path = (base || '/').split('/').slice(0, -1).concat(relative.split('/'))\n    , i = path.length\n    , last = path[i - 1]\n    , unshift = false\n    , up = 0;\n\n  while (i--) {\n    if (path[i] === '.') {\n      path.splice(i, 1);\n    } else if (path[i] === '..') {\n      path.splice(i, 1);\n      up++;\n    } else if (up) {\n      if (i === 0) unshift = true;\n      path.splice(i, 1);\n      up--;\n    }\n  }\n\n  if (unshift) path.unshift('');\n  if (last === '.' || last === '..') path.push('');\n\n  return path.join('/');\n}\n\n/**\n * The actual URL instance. Instead of returning an object we've opted-in to\n * create an actual constructor as it's much more memory efficient and\n * faster and it pleases my OCD.\n *\n * It is worth noting that we should not use `URL` as class name to prevent\n * clashes with the global URL instance that got introduced in browsers.\n *\n * @constructor\n * @param {String} address URL we want to parse.\n * @param {Object|String} [location] Location defaults for relative paths.\n * @param {Boolean|Function} [parser] Parser for the query string.\n * @private\n */\nfunction Url(address, location, parser) {\n  address = trimLeft(address);\n\n  if (!(this instanceof Url)) {\n    return new Url(address, location, parser);\n  }\n\n  var relative, extracted, parse, instruction, index, key\n    , instructions = rules.slice()\n    , type = typeof location\n    , url = this\n    , i = 0;\n\n  //\n  // The following if statements allows this module two have compatibility with\n  // 2 different API:\n  //\n  // 1. Node.js's `url.parse` api which accepts a URL, boolean as arguments\n  //    where the boolean indicates that the query string should also be parsed.\n  //\n  // 2. The `URL` interface of the browser which accepts a URL, object as\n  //    arguments. The supplied object will be used as default values / fall-back\n  //    for relative paths.\n  //\n  if ('object' !== type && 'string' !== type) {\n    parser = location;\n    location = null;\n  }\n\n  if (parser && 'function' !== typeof parser) parser = querystringify_1.parse;\n\n  location = lolcation(location);\n\n  //\n  // Extract protocol information before running the instructions.\n  //\n  extracted = extractProtocol(address || '');\n  relative = !extracted.protocol && !extracted.slashes;\n  url.slashes = extracted.slashes || relative && location.slashes;\n  url.protocol = extracted.protocol || location.protocol || '';\n  address = extracted.rest;\n\n  //\n  // When the authority component is absent the URL starts with a path\n  // component.\n  //\n  if (!extracted.slashes) instructions[3] = [/(.*)/, 'pathname'];\n\n  for (; i < instructions.length; i++) {\n    instruction = instructions[i];\n\n    if (typeof instruction === 'function') {\n      address = instruction(address);\n      continue;\n    }\n\n    parse = instruction[0];\n    key = instruction[1];\n\n    if (parse !== parse) {\n      url[key] = address;\n    } else if ('string' === typeof parse) {\n      if (~(index = address.indexOf(parse))) {\n        if ('number' === typeof instruction[2]) {\n          url[key] = address.slice(0, index);\n          address = address.slice(index + instruction[2]);\n        } else {\n          url[key] = address.slice(index);\n          address = address.slice(0, index);\n        }\n      }\n    } else if ((index = parse.exec(address))) {\n      url[key] = index[1];\n      address = address.slice(0, index.index);\n    }\n\n    url[key] = url[key] || (\n      relative && instruction[3] ? location[key] || '' : ''\n    );\n\n    //\n    // Hostname, host and protocol should be lowercased so they can be used to\n    // create a proper `origin`.\n    //\n    if (instruction[4]) url[key] = url[key].toLowerCase();\n  }\n\n  //\n  // Also parse the supplied query string in to an object. If we're supplied\n  // with a custom parser as function use that instead of the default build-in\n  // parser.\n  //\n  if (parser) url.query = parser(url.query);\n\n  //\n  // If the URL is relative, resolve the pathname against the base URL.\n  //\n  if (\n      relative\n    && location.slashes\n    && url.pathname.charAt(0) !== '/'\n    && (url.pathname !== '' || location.pathname !== '')\n  ) {\n    url.pathname = resolve(url.pathname, location.pathname);\n  }\n\n  //\n  // We should not add port numbers if they are already the default port number\n  // for a given protocol. As the host also contains the port number we're going\n  // override it with the hostname which contains no port number.\n  //\n  if (!requiresPort(url.port, url.protocol)) {\n    url.host = url.hostname;\n    url.port = '';\n  }\n\n  //\n  // Parse down the `auth` for the username and password.\n  //\n  url.username = url.password = '';\n  if (url.auth) {\n    instruction = url.auth.split(':');\n    url.username = instruction[0] || '';\n    url.password = instruction[1] || '';\n  }\n\n  url.origin = url.protocol && url.host && url.protocol !== 'file:'\n    ? url.protocol +'//'+ url.host\n    : 'null';\n\n  //\n  // The href is just the compiled result.\n  //\n  url.href = url.toString();\n}\n\n/**\n * This is convenience method for changing properties in the URL instance to\n * insure that they all propagate correctly.\n *\n * @param {String} part          Property we need to adjust.\n * @param {Mixed} value          The newly assigned value.\n * @param {Boolean|Function} fn  When setting the query, it will be the function\n *                               used to parse the query.\n *                               When setting the protocol, double slash will be\n *                               removed from the final url if it is true.\n * @returns {URL} URL instance for chaining.\n * @public\n */\nfunction set(part, value, fn) {\n  var url = this;\n\n  switch (part) {\n    case 'query':\n      if ('string' === typeof value && value.length) {\n        value = (fn || querystringify_1.parse)(value);\n      }\n\n      url[part] = value;\n      break;\n\n    case 'port':\n      url[part] = value;\n\n      if (!requiresPort(value, url.protocol)) {\n        url.host = url.hostname;\n        url[part] = '';\n      } else if (value) {\n        url.host = url.hostname +':'+ value;\n      }\n\n      break;\n\n    case 'hostname':\n      url[part] = value;\n\n      if (url.port) value += ':'+ url.port;\n      url.host = value;\n      break;\n\n    case 'host':\n      url[part] = value;\n\n      if (/:\\d+$/.test(value)) {\n        value = value.split(':');\n        url.port = value.pop();\n        url.hostname = value.join(':');\n      } else {\n        url.hostname = value;\n        url.port = '';\n      }\n\n      break;\n\n    case 'protocol':\n      url.protocol = value.toLowerCase();\n      url.slashes = !fn;\n      break;\n\n    case 'pathname':\n    case 'hash':\n      if (value) {\n        var char = part === 'pathname' ? '/' : '#';\n        url[part] = value.charAt(0) !== char ? char + value : value;\n      } else {\n        url[part] = value;\n      }\n      break;\n\n    default:\n      url[part] = value;\n  }\n\n  for (var i = 0; i < rules.length; i++) {\n    var ins = rules[i];\n\n    if (ins[4]) url[ins[1]] = url[ins[1]].toLowerCase();\n  }\n\n  url.origin = url.protocol && url.host && url.protocol !== 'file:'\n    ? url.protocol +'//'+ url.host\n    : 'null';\n\n  url.href = url.toString();\n\n  return url;\n}\n\n/**\n * Transform the properties back in to a valid and full URL string.\n *\n * @param {Function} stringify Optional query stringify function.\n * @returns {String} Compiled version of the URL.\n * @public\n */\nfunction toString(stringify) {\n  if (!stringify || 'function' !== typeof stringify) stringify = querystringify_1.stringify;\n\n  var query\n    , url = this\n    , protocol = url.protocol;\n\n  if (protocol && protocol.charAt(protocol.length - 1) !== ':') protocol += ':';\n\n  var result = protocol + (url.slashes ? '//' : '');\n\n  if (url.username) {\n    result += url.username;\n    if (url.password) result += ':'+ url.password;\n    result += '@';\n  }\n\n  result += url.host + url.pathname;\n\n  query = 'object' === typeof url.query ? stringify(url.query) : url.query;\n  if (query) result += '?' !== query.charAt(0) ? '?'+ query : query;\n\n  if (url.hash) result += url.hash;\n\n  return result;\n}\n\nUrl.prototype = { set: set, toString: toString };\n\n//\n// Expose the URL parser and some additional properties that might be useful for\n// others or testing.\n//\nUrl.extractProtocol = extractProtocol;\nUrl.location = lolcation;\nUrl.trimLeft = trimLeft;\nUrl.qs = querystringify_1;\n\nvar urlParse = Url;\n\n/**\n * parseURL - decompose a URL into its parts\n * @param  {String} url a URL\n * @return {Object} parts of the URL, including the following\n *\n * 'https://www.yahoo.com:1234/mypage?test=yes#abc'\n *\n * {\n *   host: 'www.yahoo.com:1234',\n *   protocol: 'https:',\n *   search: '?test=yes',\n *   hash: '#abc',\n *   href: 'https://www.yahoo.com:1234/mypage?test=yes#abc',\n *   pathname: '/mypage',\n *   fullpath: '/mypage?test=yes'\n * }\n */\nfunction parseURL(url) {\n    var parsedUrl = new urlParse(url);\n    if (!parsedUrl.host) {\n        // eslint-disable-next-line no-self-assign\n        parsedUrl.href = parsedUrl.href; // IE: load the host and protocol\n    }\n    var pathname = parsedUrl.pathname;\n    if (pathname.charAt(0) !== '/') {\n        pathname = '/' + pathname; // IE: prepend leading slash\n    }\n    var host = parsedUrl.host;\n    if (parsedUrl.port === '80' || parsedUrl.port === '443') {\n        host = parsedUrl.hostname; // IE: remove default port\n    }\n    return {\n        host: host,\n        protocol: parsedUrl.protocol,\n        search: parsedUrl.query,\n        hash: parsedUrl.hash,\n        href: parsedUrl.href,\n        pathname: pathname,\n        fullpath: pathname + (parsedUrl.query || '') + (parsedUrl.hash || '')\n    };\n}\n\n/**\n * Registry\n *\n * A registry is a map of HTTP verbs to route recognizers.\n */\nvar Registry = /** @class */ (function () {\n    function Registry( /* host */) {\n        // Herein we keep track of RouteRecognizer instances\n        // keyed by HTTP method. Feel free to add more as needed.\n        this.verbs = {\n            GET: new RouteRecognizer(),\n            PUT: new RouteRecognizer(),\n            POST: new RouteRecognizer(),\n            DELETE: new RouteRecognizer(),\n            PATCH: new RouteRecognizer(),\n            HEAD: new RouteRecognizer(),\n            OPTIONS: new RouteRecognizer()\n        };\n    }\n    return Registry;\n}());\n\n/**\n * Hosts\n *\n * a map of hosts to Registries, ultimately allowing\n * a per-host-and-port, per HTTP verb lookup of RouteRecognizers\n */\nvar Hosts = /** @class */ (function () {\n    function Hosts() {\n        this.registries = {};\n    }\n    /**\n     * Hosts#forURL - retrieve a map of HTTP verbs to RouteRecognizers\n     *                for a given URL\n     *\n     * @param  {String} url a URL\n     * @return {Registry}   a map of HTTP verbs to RouteRecognizers\n     *                      corresponding to the provided URL's\n     *                      hostname and port\n     */\n    Hosts.prototype.forURL = function (url) {\n        var host = parseURL(url).host;\n        var registry = this.registries[host];\n        if (registry === undefined) {\n            registry = (this.registries[host] = new Registry( /*host*/));\n        }\n        return registry.verbs;\n    };\n    return Hosts;\n}());\n\nfunction createPassthrough(fakeXHR, nativeXMLHttpRequest) {\n    // event types to handle on the xhr\n    var evts = ['error', 'timeout', 'abort', 'readystatechange'];\n    // event types to handle on the xhr.upload\n    var uploadEvents = [];\n    // properties to copy from the native xhr to fake xhr\n    var lifecycleProps = [\n        'readyState',\n        'responseText',\n        'response',\n        'responseXML',\n        'responseURL',\n        'status',\n        'statusText',\n    ];\n    var xhr = (fakeXHR._passthroughRequest = new nativeXMLHttpRequest());\n    xhr.open(fakeXHR.method, fakeXHR.url, fakeXHR.async, fakeXHR.username, fakeXHR.password);\n    if (fakeXHR.responseType === 'arraybuffer') {\n        lifecycleProps = ['readyState', 'response', 'status', 'statusText'];\n        xhr.responseType = fakeXHR.responseType;\n    }\n    // use onload if the browser supports it\n    if ('onload' in xhr) {\n        evts.push('load');\n    }\n    // add progress event for async calls\n    // avoid using progress events for sync calls, they will hang https://bugs.webkit.org/show_bug.cgi?id=40996.\n    if (fakeXHR.async && fakeXHR.responseType !== 'arraybuffer') {\n        evts.push('progress');\n        uploadEvents.push('progress');\n    }\n    // update `propertyNames` properties from `fromXHR` to `toXHR`\n    function copyLifecycleProperties(propertyNames, fromXHR, toXHR) {\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            if (prop in fromXHR) {\n                toXHR[prop] = fromXHR[prop];\n            }\n        }\n    }\n    // fire fake event on `eventable`\n    function dispatchEvent(eventable, eventType, event) {\n        eventable.dispatchEvent(event);\n        if (eventable['on' + eventType]) {\n            eventable['on' + eventType](event);\n        }\n    }\n    // set the on- handler on the native xhr for the given eventType\n    function createHandler(eventType) {\n        xhr['on' + eventType] = function (event) {\n            copyLifecycleProperties(lifecycleProps, xhr, fakeXHR);\n            dispatchEvent(fakeXHR, eventType, event);\n        };\n    }\n    // set the on- handler on the native xhr's `upload` property for\n    // the given eventType\n    function createUploadHandler(eventType) {\n        if (xhr.upload && fakeXHR.upload && fakeXHR.upload['on' + eventType]) {\n            xhr.upload['on' + eventType] = function (event) {\n                dispatchEvent(fakeXHR.upload, eventType, event);\n            };\n        }\n    }\n    var i;\n    for (i = 0; i < evts.length; i++) {\n        createHandler(evts[i]);\n    }\n    for (i = 0; i < uploadEvents.length; i++) {\n        createUploadHandler(uploadEvents[i]);\n    }\n    if (fakeXHR.async) {\n        xhr.timeout = fakeXHR.timeout;\n        xhr.withCredentials = fakeXHR.withCredentials;\n    }\n    for (var h in fakeXHR.requestHeaders) {\n        xhr.setRequestHeader(h, fakeXHR.requestHeaders[h]);\n    }\n    return xhr;\n}\n\nfunction interceptor(ctx) {\n    function FakeRequest() {\n        // super()\n        FakeXMLHttpRequest.call(this);\n    }\n    FakeRequest.prototype = Object.create(FakeXMLHttpRequest.prototype);\n    FakeRequest.prototype.constructor = FakeRequest;\n    // extend\n    FakeRequest.prototype.send = function send() {\n        this.sendArguments = arguments;\n        if (!ctx.pretender.running) {\n            throw new Error('You shut down a Pretender instance while there was a pending request. ' +\n                'That request just tried to complete. Check to see if you accidentally shut down ' +\n                'a pretender earlier than you intended to');\n        }\n        FakeXMLHttpRequest.prototype.send.apply(this, arguments);\n        if (ctx.pretender.checkPassthrough(this)) {\n            this.passthrough();\n        }\n        else {\n            ctx.pretender.handleRequest(this);\n        }\n    };\n    FakeRequest.prototype.passthrough = function passthrough() {\n        if (!this.sendArguments) {\n            throw new Error('You attempted to passthrough a FakeRequest that was never sent. ' +\n                'Call `.send()` on the original request first');\n        }\n        var xhr = createPassthrough(this, ctx.pretender._nativeXMLHttpRequest);\n        xhr.send.apply(xhr, this.sendArguments);\n        return xhr;\n    };\n    FakeRequest.prototype._passthroughCheck = function (method, args) {\n        if (this._passthroughRequest) {\n            return this._passthroughRequest[method].apply(this._passthroughRequest, args);\n        }\n        return FakeXMLHttpRequest.prototype[method].apply(this, args);\n    };\n    FakeRequest.prototype.abort = function abort() {\n        return this._passthroughCheck('abort', arguments);\n    };\n    FakeRequest.prototype.getResponseHeader = function getResponseHeader() {\n        return this._passthroughCheck('getResponseHeader', arguments);\n    };\n    FakeRequest.prototype.getAllResponseHeaders = function getAllResponseHeaders() {\n        return this._passthroughCheck('getAllResponseHeaders', arguments);\n    };\n    if (ctx.pretender._nativeXMLHttpRequest.prototype._passthroughCheck) {\n        // eslint-disable-next-line no-console\n        console.warn('You created a second Pretender instance while there was already one running. ' +\n            'Running two Pretender servers at once will lead to unexpected results and will ' +\n            'be removed entirely in a future major version.' +\n            'Please call .shutdown() on your instances when you no longer need them to respond.');\n    }\n    return FakeRequest;\n}\n\nfunction Pretender( /* routeMap1, routeMap2, ..., options*/) {\n    this.hosts = new Hosts();\n    var lastArg = arguments[arguments.length - 1];\n    var options = typeof lastArg === 'object' ? lastArg : null;\n    var shouldNotTrack = options && (options.trackRequests === false);\n    var noopArray = { push: function () { }, length: 0 };\n    this.handlers = [];\n    this.handledRequests = shouldNotTrack ? noopArray : [];\n    this.passthroughRequests = shouldNotTrack ? noopArray : [];\n    this.unhandledRequests = shouldNotTrack ? noopArray : [];\n    this.requestReferences = [];\n    this.forcePassthrough = options && (options.forcePassthrough === true);\n    this.disableUnhandled = options && (options.disableUnhandled === true);\n    // reference the native XMLHttpRequest object so\n    // it can be restored later\n    this._nativeXMLHttpRequest = self.XMLHttpRequest;\n    this.running = false;\n    var ctx = { pretender: this };\n    this.ctx = ctx;\n    // capture xhr requests, channeling them into\n    // the route map.\n    self.XMLHttpRequest = interceptor(ctx);\n    // polyfill fetch when xhr is ready\n    this._fetchProps = FakeFetch ? ['fetch', 'Headers', 'Request', 'Response'] : [];\n    this._fetchProps.forEach(function (name) {\n        this['_native' + name] = self[name];\n        self[name] = FakeFetch[name];\n    }, this);\n    // 'start' the server\n    this.running = true;\n    // trigger the route map DSL.\n    var argLength = options ? arguments.length - 1 : arguments.length;\n    for (var i = 0; i < argLength; i++) {\n        this.map(arguments[i]);\n    }\n}\nfunction verbify(verb) {\n    return function (path, handler, async) {\n        return this.register(verb, path, handler, async);\n    };\n}\nfunction scheduleProgressEvent(request, startTime, totalTime) {\n    setTimeout(function () {\n        if (!request.aborted && !request.status) {\n            var elapsedTime = new Date().getTime() - startTime.getTime();\n            var progressTotal = void 0;\n            var body = request.requestBody;\n            if (!body) {\n                progressTotal = 0;\n            }\n            else {\n                // Support Blob, BufferSource, USVString, ArrayBufferView\n                progressTotal = body.byteLength || body.size || body.length || 0;\n            }\n            var progressTransmitted = totalTime <= 0 ? 0 : (elapsedTime / totalTime) * progressTotal;\n            // ProgressEvent expects loaded, total\n            // https://xhr.spec.whatwg.org/#interface-progressevent\n            request.upload._progress(true, progressTransmitted, progressTotal);\n            request._progress(true, progressTransmitted, progressTotal);\n            scheduleProgressEvent(request, startTime, totalTime);\n        }\n    }, 50);\n}\nfunction isArray(array) {\n    return Object.prototype.toString.call(array) === '[object Array]';\n}\nvar PASSTHROUGH = {};\nPretender.prototype = {\n    get: verbify('GET'),\n    post: verbify('POST'),\n    put: verbify('PUT'),\n    'delete': verbify('DELETE'),\n    patch: verbify('PATCH'),\n    head: verbify('HEAD'),\n    options: verbify('OPTIONS'),\n    map: function (maps) {\n        maps.call(this);\n    },\n    register: function register(verb, url, handler, async) {\n        if (!handler) {\n            throw new Error('The function you tried passing to Pretender to handle ' +\n                verb + ' ' + url + ' is undefined or missing.');\n        }\n        handler.numberOfCalls = 0;\n        handler.async = async;\n        this.handlers.push(handler);\n        var registry = this.hosts.forURL(url)[verb];\n        registry.add([{\n                path: parseURL(url).fullpath,\n                handler: handler\n            }]);\n        return handler;\n    },\n    passthrough: PASSTHROUGH,\n    checkPassthrough: function checkPassthrough(request) {\n        var verb = request.method.toUpperCase();\n        var path = parseURL(request.url).fullpath;\n        var recognized = this.hosts.forURL(request.url)[verb].recognize(path);\n        var match = recognized && recognized[0];\n        if ((match && match.handler === PASSTHROUGH) || this.forcePassthrough) {\n            this.passthroughRequests.push(request);\n            this.passthroughRequest(verb, path, request);\n            return true;\n        }\n        return false;\n    },\n    handleRequest: function handleRequest(request) {\n        var verb = request.method.toUpperCase();\n        var path = request.url;\n        var handler = this._handlerFor(verb, path, request);\n        if (handler) {\n            handler.handler.numberOfCalls++;\n            var async_1 = handler.handler.async;\n            this.handledRequests.push(request);\n            var pretender_1 = this;\n            var _handleRequest_1 = function (statusHeadersAndBody) {\n                if (!isArray(statusHeadersAndBody)) {\n                    var note = 'Remember to `return [status, headers, body];` in your route handler.';\n                    throw new Error('Nothing returned by handler for ' + path + '. ' + note);\n                }\n                var status = statusHeadersAndBody[0];\n                var headers = pretender_1.prepareHeaders(statusHeadersAndBody[1]);\n                var body = pretender_1.prepareBody(statusHeadersAndBody[2], headers);\n                pretender_1.handleResponse(request, async_1, function () {\n                    request.respond(status, headers, body);\n                    pretender_1.handledRequest(verb, path, request);\n                });\n            };\n            try {\n                var result = handler.handler(request);\n                if (result && typeof result.then === 'function') {\n                    // `result` is a promise, resolve it\n                    result.then(function (resolvedResult) {\n                        _handleRequest_1(resolvedResult);\n                    });\n                }\n                else {\n                    _handleRequest_1(result);\n                }\n            }\n            catch (error) {\n                this.erroredRequest(verb, path, request, error);\n                this.resolve(request);\n            }\n        }\n        else {\n            if (!this.disableUnhandled) {\n                this.unhandledRequests.push(request);\n                this.unhandledRequest(verb, path, request);\n            }\n        }\n    },\n    handleResponse: function handleResponse(request, strategy, callback) {\n        var delay = typeof strategy === 'function' ? strategy() : strategy;\n        delay = typeof delay === 'boolean' || typeof delay === 'number' ? delay : 0;\n        if (delay === false) {\n            callback();\n        }\n        else {\n            var pretender_2 = this;\n            pretender_2.requestReferences.push({\n                request: request,\n                callback: callback\n            });\n            if (delay !== true) {\n                scheduleProgressEvent(request, new Date(), delay);\n                setTimeout(function () {\n                    pretender_2.resolve(request);\n                }, delay);\n            }\n        }\n    },\n    resolve: function resolve(request) {\n        for (var i = 0, len = this.requestReferences.length; i < len; i++) {\n            var res = this.requestReferences[i];\n            if (res.request === request) {\n                res.callback();\n                this.requestReferences.splice(i, 1);\n                break;\n            }\n        }\n    },\n    requiresManualResolution: function (verb, path) {\n        var handler = this._handlerFor(verb.toUpperCase(), path, {});\n        if (!handler) {\n            return false;\n        }\n        var async = handler.handler.async;\n        return typeof async === 'function' ? async() === true : async === true;\n    },\n    prepareBody: function (body) { return body; },\n    prepareHeaders: function (headers) { return headers; },\n    handledRequest: function ( /* verb, path, request */) { },\n    passthroughRequest: function ( /* verb, path, request */) { },\n    unhandledRequest: function (verb, path /*, request */) {\n        throw new Error('Pretender intercepted ' + verb + ' ' +\n            path + ' but no handler was defined for this type of request');\n    },\n    erroredRequest: function (verb, path, request, error) {\n        error.message = 'Pretender intercepted ' + verb + ' ' +\n            path + ' but encountered an error: ' + error.message;\n        throw error;\n    },\n    _handlerFor: function (verb, url, request) {\n        var registry = this.hosts.forURL(url)[verb];\n        var matches = registry.recognize(parseURL(url).fullpath);\n        var match = matches ? matches[0] : null;\n        if (match) {\n            request.params = match.params;\n            request.queryParams = matches.queryParams;\n        }\n        return match;\n    },\n    shutdown: function shutdown() {\n        self.XMLHttpRequest = this._nativeXMLHttpRequest;\n        this._fetchProps.forEach(function (name) {\n            self[name] = this['_native' + name];\n        }, this);\n        this.ctx.pretender = undefined;\n        // 'stop' the server\n        this.running = false;\n    }\n};\nPretender.parseURL = parseURL;\nPretender.Hosts = Hosts;\nPretender.Registry = Registry;\n\nexport default Pretender;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}