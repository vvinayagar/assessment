{"ast":null,"code":"var _jsxFileName = \"/Users/ganesan/Documents/GitHub/assessment/src/components/App.tsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [post, setPost] = useState([]);\n  useEffect(() => {\n    const getData = async () => {\n      let response = await axios.get(\"/api/posts/\");\n      console.log(\"Data: \" + JSON.stringify(response));\n      console.log(\"Categories: \" + JSON.stringify(response.data[\"posts\"]));\n      let posts = response.data[\"posts\"];\n      posts.map(post => {});\n    };\n    getData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 10\n  }, this);\n};\n_s(App, \"Jg3JPjoPzA3EcYCkmMnhWP1aifE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["axios","React","useState","useEffect","App","data","setData","categories","setCategories","post","setPost","getData","response","get","console","log","JSON","stringify","posts","map"],"sources":["/Users/ganesan/Documents/GitHub/assessment/src/components/App.tsx"],"sourcesContent":["import axios from \"axios\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\n\n\ninterface Props {\n  // Define the props interface here\n}\n\n\nconst App: React.FC<Props> = () => {\n\n\n  const [data, setData] = useState<any>([]);\n  const [categories, setCategories] = useState<any>([]);\n  const [post, setPost] = useState<any>([]);\n\n  useEffect(() => {\n    const getData = async () => {\n      let response = await axios.get(\"/api/posts/\");\n\n      console.log(\"Data: \" + JSON.stringify(response));\n      console.log(\"Categories: \" + JSON.stringify(response.data[\"posts\"]));\n\n      let posts: [] = response.data[\"posts\"];\n      \n      posts.map((post: any) => {\n        \n      });\n      \n    };\n  \n    getData();\n  },[]);\n\n  return <div>{/* Complete the exercise here. */}</div>;\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,SAAS,QAAQ,OAAO;AAAC;AAQlC,MAAMC,GAAoB,GAAG,MAAM;EAAA;EAGjC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,CAAM,EAAE,CAAC;EACzC,MAAM,CAACK,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAM,EAAE,CAAC;EACrD,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAM,EAAE,CAAC;EAEzCC,SAAS,CAAC,MAAM;IACd,MAAMQ,OAAO,GAAG,YAAY;MAC1B,IAAIC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,aAAa,CAAC;MAE7CC,OAAO,CAACC,GAAG,CAAC,QAAQ,GAAGC,IAAI,CAACC,SAAS,CAACL,QAAQ,CAAC,CAAC;MAChDE,OAAO,CAACC,GAAG,CAAC,cAAc,GAAGC,IAAI,CAACC,SAAS,CAACL,QAAQ,CAACP,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;MAEpE,IAAIa,KAAS,GAAGN,QAAQ,CAACP,IAAI,CAAC,OAAO,CAAC;MAEtCa,KAAK,CAACC,GAAG,CAAEV,IAAS,IAAK,CAEzB,CAAC,CAAC;IAEJ,CAAC;IAEDE,OAAO,EAAE;EACX,CAAC,EAAC,EAAE,CAAC;EAEL,oBAAO;IAAA;IAAA;IAAA;EAAA,QAA8C;AACvD,CAAC;AAAA,GA1BKP,GAAoB;AAAA,KAApBA,GAAoB;AA4B1B,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module"}